#!/bin/bash
# shellcheck disable=SC2317

set -uo pipefail

viewer=okular

[ "$#" -ne 1 ] && { echo "Bad arguments, trying $viewer..."; exec $viewer "$@"; }
[ -f "$1" ] || { echo "File does not exist, trying $viewer..."; exec $viewer "$1"; }

size=$(du "$1") || { echo "Cannot get size, trying $viewer..."; exec $viewer "$1"; }
size=$(cut -f1 <<< "$size")
[ "$size" -lt 5120 ] || { echo "Too large, trying $viewer..."; exec $viewer "$1"; }

ft=$(file -b "$1")
ft=$(cut -d ' ' -f1 <<< "$ft")
ft="${ft,,}"

if [ "$ft" == "pdf" ]; then
    len=$(pdftk "$1" dump_data | awk '/NumberOfPages/{print $2}')
    [ -z "$len" ] || [ "$len" -gt 75 ] && { echo "Too long, trying $viewer..."; exec $viewer "$1"; }
fi

filename=$(basename "$1")
tmpdir=$(mktemp -d)
tmp="$tmpdir/$filename"

trap 'rm -rf "$tmpdir"' EXIT

(
    # Because Zenity ...
    function clean_up {
        [ -n "$(jobs -pr)" ] && kill "$(jobs -pr)"
    }

    trap clean_up EXIT

    convert -density 250 "$1" "$tmp" |
    zenity --progress \
    	--pulsate \
    	--auto-close \
    	--auto-kill \
    	--text="Rasterizing File..."
)

exitstatus=$?
if [ "$exitstatus" -eq 129 ]; then
    echo 'Rasterization cancelled... Quitting.'
    exit
elif [ "$exitstatus" -ne 0 ]; then
    echo "Convert failed, trying $viewer..."
    $viewer "$1"
    exit
fi

echo "Done rasterizing, now opening with $viewer..."
exiftool -tagsfromfile "$1" -title "$tmp"
echo "(output file: $tmp)"
$viewer "$tmp"
